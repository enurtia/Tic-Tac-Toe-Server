package ServerProgram;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import javax.swing.DefaultListModel;
import javax.swing.JTextArea;

/**
 *
 * @author Alex
 */
public class ServerFrame extends javax.swing.JFrame 
{
    private final int PORT = 25566;
    private DefaultListModel<User> userModel;
    private DefaultListModel<Game> gameModel;
    private MainPanel mainPanel;
    /**
     * Creates new form ServerFrame
     */
    public ServerFrame() 
    {
        mainPanel = new MainPanel();
        
        initComponents();
        
        setSocketLabel();
        
        userModel = new DefaultListModel<>();
        jListUsersOnline.setModel(userModel);
        
        gameModel = new DefaultListModel<>();
        listActiveGames.setModel(gameModel);
        
        //Begin client handling
        ClientHandler handler = new ClientHandler(this, PORT);
        handler.execute();
    }

    public JTextArea getTextArea()
    {
        return txtAreaConsole;
    }
    
    public DefaultListModel<User> getUserModel()
    {
        return userModel;
    }
    
    public DefaultListModel<Game> getGameModel()
    {
        return gameModel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListUsersOnline = new javax.swing.JList<>();
        lblUsersOnline = new javax.swing.JLabel();
        lblSocketAddress = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listActiveGames = new javax.swing.JList<>();
        lblActiveGames = new javax.swing.JLabel();
        panelSpectate = mainPanel;
        lblUserActions = new javax.swing.JLabel();
        btnKickUser = new javax.swing.JButton();
        btnBanUser = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaConsole = new javax.swing.JTextArea();
        lblX = new javax.swing.JLabel();
        lblO = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe Server");

        jListUsersOnline.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                jListUsersOnlineValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListUsersOnline);

        lblUsersOnline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsersOnline.setText("Users Online");

        lblSocketAddress.setText("Socket Address: ");

        listActiveGames.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                listActiveGamesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listActiveGames);
        listActiveGames.getAccessibleContext().setAccessibleName("");

        lblActiveGames.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblActiveGames.setText("Active Games");

        javax.swing.GroupLayout panelSpectateLayout = new javax.swing.GroupLayout(panelSpectate);
        panelSpectate.setLayout(panelSpectateLayout);
        panelSpectateLayout.setHorizontalGroup(
            panelSpectateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelSpectateLayout.setVerticalGroup(
            panelSpectateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        lblUserActions.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserActions.setText("User Actions");

        btnKickUser.setText("Kick User");
        btnKickUser.setEnabled(false);
        btnKickUser.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnKickUserActionPerformed(evt);
            }
        });

        btnBanUser.setText("Ban User");
        btnBanUser.setEnabled(false);
        btnBanUser.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnBanUserActionPerformed(evt);
            }
        });

        txtAreaConsole.setColumns(20);
        txtAreaConsole.setRows(5);
        jScrollPane2.setViewportView(txtAreaConsole);

        lblX.setText("X: ");

        lblO.setText("O:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblX, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSocketAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(panelSpectate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(lblO, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKickUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblUserActions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBanUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(lblActiveGames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(lblUsersOnline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsersOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSocketAddress)
                    .addComponent(lblActiveGames))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelSpectate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblO)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUserActions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKickUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBanUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKickUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKickUserActionPerformed
        try
        {
            User selectedUser = jListUsersOnline.getSelectedValue();
            selectedUser.getSocket().close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnKickUserActionPerformed

    private void btnBanUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBanUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBanUserActionPerformed

    private void jListUsersOnlineValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jListUsersOnlineValueChanged
    {//GEN-HEADEREND:event_jListUsersOnlineValueChanged
        if(jListUsersOnline.getSelectedValue() != null)
        {
            btnKickUser.setEnabled(true);
        }
        else
        {
            btnKickUser.setEnabled(false);
        }
    }//GEN-LAST:event_jListUsersOnlineValueChanged

    private void listActiveGamesValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_listActiveGamesValueChanged
    {//GEN-HEADEREND:event_listActiveGamesValueChanged
        Game game = listActiveGames.getSelectedValue();
        
        if(game != null)
        {
            mainPanel.setGame(game);
            
            User u1 = game.getUser1();
            User u2 = game.getUser2();
            
            if(u1.getShape().equals("X"))
            {
                lblX.setText("X: " + u1.toString());
                lblO.setText("O: " + u2.toString());
            }
            else if(u2.getShape().equals("X"))
            {
                lblX.setText("X: " + u2.toString());
                lblO.setText("O: " + u1.toString());
            }
        }
        else
        {
            mainPanel.setGame(null);
            lblX.setText("X:");
            lblO.setText("O:");
        }
    }//GEN-LAST:event_listActiveGamesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerFrame().setVisible(true);
            }
        });
    }

    private void setSocketLabel()
    {
        //Set server socket address label (lblSocketAddress)
        //Uses checkip.amazonaws.com to retrieve public ip
        try
        {
            URL checkIP = new URL("http://checkip.amazonaws.com/");
            InputStream in = checkIP.openStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(in));
            String hostIP = reader.readLine();
            
            lblSocketAddress.setText("Socket Address: " + hostIP + ":" + PORT);
            in.close();
            
            //If checkip server doesn't return a string, remove label's text.
            if(hostIP.equals(""))
            {
                lblSocketAddress.setText("");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBanUser;
    private javax.swing.JButton btnKickUser;
    private javax.swing.JList<User> jListUsersOnline;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblActiveGames;
    private javax.swing.JLabel lblO;
    private javax.swing.JLabel lblSocketAddress;
    private javax.swing.JLabel lblUserActions;
    private javax.swing.JLabel lblUsersOnline;
    private javax.swing.JLabel lblX;
    private javax.swing.JList<Game> listActiveGames;
    private javax.swing.JPanel panelSpectate;
    private javax.swing.JTextArea txtAreaConsole;
    // End of variables declaration//GEN-END:variables
}
